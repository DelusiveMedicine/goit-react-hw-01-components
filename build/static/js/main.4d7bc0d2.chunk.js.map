{"version":3,"sources":["components/Profile/Profile.module.css","components/Stats/Stats.module.css","components/FriendList/FriendListItem.module.css","components/TransactionHistory/TransactionHistory.module.css","components/TransactionHistory/TransactionHistoryItem.module.css","components/FriendList/FriendList.module.css","components/Profile/index.js","components/Profile/Profile.jsx","components/Stats/Stats.jsx","components/Stats/index.js","components/Stats/stats.js","components/FriendList/FriendListItem.jsx","components/FriendList/index.js","components/FriendList/FriendList.jsx","components/TransactionHistory/TransactionHistoryItem.jsx","components/TransactionHistory/index.js","components/TransactionHistory/TransactionHistory.jsx","components/App.jsx","index.js"],"names":["module","exports","Profile","user","avatar","name","tag","location","stats","followers","views","likes","container","styles","userCard","userPhoto","userStats","userStatsItem","leftBorderBottom","rightBorderBottom","regularText","boldText","firstUserStatsItem","lastUserStatsItem","userNameStyle","className","src","alt","join","randomColor","first","Math","floor","random","second","third","Stats","title","statsList","statsTitle","statsListItem","statsLabel","map","stat","key","id","style","backgroundColor","label","percentage","defaultProps","FriendListItem","isOnline","friendStatus","friendAvatar","online","offline","friendStatusStyle","push","FriendList","friends","friend","TransactionHistoryItem","type","amount","currency","tableCell","tableBody","TransactionHistory","items","table","tableHead","item","App","Fragment","transactions","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4d7bc0d2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Profile_container__2pqxE\",\"userCard\":\"Profile_userCard__2FEmV\",\"userPhoto\":\"Profile_userPhoto__3tAjy\",\"regularText\":\"Profile_regularText__8_955\",\"boldText\":\"Profile_boldText__1CJa5\",\"userStats\":\"Profile_userStats__16Ea7\",\"userStatsItem\":\"Profile_userStatsItem__O9UGT\",\"leftBorderBottom\":\"Profile_leftBorderBottom__2BJTf\",\"rightBorderBottom\":\"Profile_rightBorderBottom__37km0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Stats_container__1Q7PM\",\"statsList\":\"Stats_statsList__395SO\",\"statsTitle\":\"Stats_statsTitle__61Q7-\",\"statsListItem\":\"Stats_statsListItem__2-JpD\",\"statsLabel\":\"Stats_statsLabel__3xt4o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FriendListItem_container__nhL_E\",\"friendStatus\":\"FriendListItem_friendStatus__Y7vKl\",\"online\":\"FriendListItem_online__1PUta\",\"offline\":\"FriendListItem_offline__hlYcp\",\"friendAvatar\":\"FriendListItem_friendAvatar__3MRIm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"TransactionHistory_table__3jVNC\",\"tableHead\":\"TransactionHistory_tableHead__ohQ_s\",\"tableCell\":\"TransactionHistory_tableCell__2B_Bh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tableCell\":\"TransactionHistoryItem_tableCell__Jq-hY\",\"tableBody\":\"TransactionHistoryItem_tableBody__1oz7k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FriendList_container__i0HWN\"};","import Profile from './Profile';\n\nexport default Profile;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Profile.module.css';\n\nconst Profile = ({ user }) => {\n  const { avatar, name, tag, location, stats } = user;\n  const { followers, views, likes } = stats;\n  const {\n    container,\n    userCard,\n    userPhoto,\n    userStats,\n    userStatsItem,\n    leftBorderBottom,\n    rightBorderBottom,\n    regularText,\n    boldText,\n  } = styles;\n\n  const firstUserStatsItem = [userStatsItem, leftBorderBottom];\n  const lastUserStatsItem = [userStatsItem, rightBorderBottom];\n  const userNameStyle = [regularText, boldText];\n\n  return (\n    <div className={container}>\n      <div className={userCard}>\n        <img src={avatar} alt={`${name} avatar`} className={userPhoto} />\n        <p className={userNameStyle.join(' ')}>{name}</p>\n        <p className={regularText}>{`@${tag}`}</p>\n        <p className={regularText}>{location}</p>\n      </div>\n      <ul className={userStats}>\n        <li className={firstUserStatsItem.join(' ')}>\n          <span className={regularText}>Followers</span>\n          <span className={boldText}>{followers}</span>\n        </li>\n        <li className={userStatsItem}>\n          <span className={regularText}>Views</span>\n          <span className={boldText}>{views}</span>\n        </li>\n        <li className={lastUserStatsItem.join(' ')}>\n          <span className={regularText}>Likes</span>\n          <span className={boldText}>{likes}</span>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nProfile.propTypes = {\n  user: PropTypes.shape({\n    name: PropTypes.string,\n    tag: PropTypes.string,\n    location: PropTypes.string,\n    avatar: PropTypes.string,\n    stats: PropTypes.shape({\n      followers: PropTypes.number,\n      views: PropTypes.number,\n      likes: PropTypes.number,\n    }),\n  }).isRequired,\n};\n\nexport default Profile;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Stats.module.css';\n\nconst randomColor = () => {\n  const first = Math.floor(Math.random() * 256);\n  const second = Math.floor(Math.random() * 256);\n  const third = Math.floor(Math.random() * 256);\n  const color = `rgb(${first},${second},${third})`;\n  return color;\n};\n\nconst Stats = ({ stats, title }) => {\n  const {\n    container,\n    statsList,\n    statsTitle,\n    statsListItem,\n    statsLabel,\n  } = styles;\n\n  return (\n    <section className={container}>\n      {title ? <h2 className={statsTitle}>{title}</h2> : null}\n      <ul className={statsList}>\n        {stats.map(stat => (\n          <li\n            key={stat.id}\n            className={statsListItem}\n            style={{ backgroundColor: randomColor() }}\n          >\n            <span className={statsLabel}>{stat.label}</span>\n            <span>{`${stat.percentage}%`}</span>\n          </li>\n        ))}\n      </ul>\n    </section>\n  );\n};\n\nStats.propTypes = {\n  title: PropTypes.string,\n  stats: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      label: PropTypes.string,\n      percentage: PropTypes.number,\n    }),\n  ).isRequired,\n};\n\nStats.defaultProps = {\n  title: '',\n};\n\nexport default Stats;\n","import Stats from './Stats.jsx';\n\nexport default Stats;\n","const stats = [\n  { id: 'id-1', label: '.docx', percentage: 22 },\n  { id: 'id-2', label: '.pdf', percentage: 4 },\n  { id: 'id-3', label: '.mp3', percentage: 17 },\n  { id: 'id-4', label: '.psd', percentage: 47 },\n  { id: 'id-5', label: '.pdf', percentage: 10 },\n];\n\nexport default stats;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './FriendListItem.module.css';\n\nconst FriendListItem = ({ avatar, name, isOnline }) => {\n  const { container, friendStatus, friendAvatar, online, offline } = styles;\n  const friendStatusStyle = [friendStatus];\n  if (isOnline) {\n    friendStatusStyle.push(online);\n  } else {\n    friendStatusStyle.push(offline);\n  }\n\n  return (\n    <li className={container}>\n      <span className={friendStatusStyle.join(' ')} />\n      <img src={avatar} alt={name} className={friendAvatar} />\n      <p>{name}</p>\n    </li>\n  );\n};\n\nFriendListItem.defaultProps = {\n  avatar: 'https://www.imanami.com/wp-content/uploads/2016/03/unknown-user.jpg',\n  name: 'Anonym',\n};\n\nFriendListItem.propTypes = {\n  avatar: PropTypes.string,\n  name: PropTypes.string,\n  isOnline: PropTypes.bool.isRequired,\n};\n\nexport default FriendListItem;\n","import FriendList from './FriendList';\n\nexport default FriendList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport FriendListItem from './FriendListItem';\nimport styles from './FriendList.module.css';\n\nconst Friendlist = ({ friends }) => {\n  const { container } = styles;\n  return (\n    <ul className={container}>\n      {friends.map(friend => {\n        const { id, avatar, name, isOnline } = friend;\n        return (\n          <FriendListItem\n            key={id}\n            avatar={avatar}\n            name={name}\n            isOnline={isOnline}\n          />\n        );\n      })}\n    </ul>\n  );\n};\n\nFriendlist.propTypes = {\n  friends: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default Friendlist;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './TransactionHistoryItem.module.css';\n\nconst TransactionHistoryItem = ({ type, amount, currency }) => {\n  const { tableCell, tableBody } = styles;\n  return (\n    <tr className={tableBody}>\n      <td className={tableCell}>{type}</td>\n      <td className={tableCell}>{amount}</td>\n      <td className={tableCell}>{currency}</td>\n    </tr>\n  );\n};\n\nTransactionHistoryItem.propTypes = {\n  type: PropTypes.string.isRequired,\n  amount: PropTypes.string.isRequired,\n  currency: PropTypes.string.isRequired,\n};\n\nexport default TransactionHistoryItem;\n","import TransactionHistory from './TransactionHistory';\n\nexport default TransactionHistory;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TransactionHistoryItem from './TransactionHistoryItem';\nimport styles from './TransactionHistory.module.css';\n\nconst TransactionHistory = ({ items }) => {\n  const { table, tableCell, tableHead } = styles;\n  return (\n    <table className={table}>\n      <thead className={tableHead}>\n        <tr>\n          <th className={tableCell}>Type</th>\n          <th className={tableCell}>Amount</th>\n          <th className={tableCell}>Currency</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {items.map(item => {\n          const { id, type, amount, currency } = item;\n          return (\n            <TransactionHistoryItem\n              key={id}\n              type={type}\n              amount={amount}\n              currency={currency}\n            />\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n\nTransactionHistory.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default TransactionHistory;\n","import React from 'react';\nimport Profile from './Profile';\nimport user from './Profile/user';\nimport Stats from './Stats';\nimport stats from './Stats/stats';\nimport FriendList from './FriendList';\nimport friends from './FriendList/friends';\nimport TransactionHistory from './TransactionHistory';\nimport transactions from './TransactionHistory/transactions';\n\nconst App = () => {\n  return (\n    <React.Fragment key={1}>\n      <Profile user={user} />\n      <Stats title=\"Upload stats\" stats={stats} />\n      <FriendList friends={friends} />\n      <TransactionHistory items={transactions} />\n    </React.Fragment>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}